import { currentlyPlaying, EMOJI_REGEXP, EmojiButtons, IngameStatus as IS, ONLINE_TRACKER, RANK_BADGES, RANK_COLORS, RANKS, VERIFICATION_LEVEL } from '@r6ru/types';
import { EmbedField, GuildMember, MessageOptions, Util } from 'discord.js';
import bot from '../bot';
import ENV from './env';
import { LobbyStore } from './lobby';
import { LSRoom } from './lobby/room';

export default {
  appealMsg: (lobby: LSRoom): MessageOptions => ({
    embed: {
      author: {
          iconURL: lobby.dcLeader.user.displayAvatarURL(),
          name: modeSelector(lobby),
      },
      color: RANK_COLORS[(lobby.leader && lobby.leader.rank) || 0],
      description:
        (lobby.members
          .sort((a, b) => b.rank - a.rank)
          .map(m => (lobby.dcLeader.id === m.id ? '\\üëë ' : '')
              + (!m.platform.PC ? '\\üéÆ' : '')
              + `<@${m.id}> (${bot.emojis.resolve(RANK_BADGES[m.rank])} **${Util.escapeMarkdown(m.nickname)}** - [${Object.entries(m.platform).find(e => e[1])[0].replace('PC', 'Uplay').replace('PS4', 'PSN').replace('XBOX', 'Xbox LIVE')}](${ONLINE_TRACKER}${m.genome})${(' | ' + m.region).replace(/.+emea/g, '').replace('ncsa', 'üåé').replace('apac', 'üåè')})`
              + ((m.verificationLevel >= VERIFICATION_LEVEL.QR) ? ' ' + ENV.VERIFIED_BADGE : ''))
          .join('\n'))
        + (lobby.description
          ? `\n‚ñ´${lobby.description}`
          : ''),
      fields: (() => {
        const fields: EmbedField[] = [];
        if (lobby.hardplay) {
          fields.push({
            name: `–†–µ–∂–∏–º "HardPlay\\${EmojiButtons.HARDPLAY}"`,
            value: `–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥ –¥–ª—è –≤—Ö–æ–¥–∞: \`${RANKS[lobby.guild.rankRoles.findIndex(r => lobby.guild.rankRoles[lobby.minRank] === r)]}\``,
          });
        }
        if (lobby.close) {
          fields.push({
            name: '–ó–∞–∫—Ä—ã—Ç–æ–µ –ª–æ–±–±–∏',
            value: '–õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∫–æ–≥–æ-–ª–∏–±–æ –∏–∑ –ª–æ–±–±–∏.',
          });
        }
        if ([IS.NEWCOMER, IS.NEWCOMER_SEARCH].includes(lobby.status)) {
          fields.push({
            name: '–†–µ–∂–∏–º "–ù–æ–≤–∏—á–æ–∫"',
            value: '–û–ø—ã—Ç–Ω—ã–º –∏–≥—Ä–æ–∫–∞–º –ª—É—á—à–µ –Ω–∞–π—Ç–∏ –¥—Ä—É–≥—É—é –∫–æ–º–Ω–∞—Ç—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–π.',
          });
        }
        if (lobby.joinAllowed) {
          fields.push({
            name: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è:',
            value: `${lobby.dcInvite.url} üëà`,
          });
        } else if (!lobby.close && (lobby.dcMembers.size < lobby.dcChannel.userLimit) && currentlyPlaying.includes(lobby.status)) {
          fields.push({
            name: '–õ–æ–±–±–∏ –∏–≥—Ä–∞–µ—Ç',
            value: `–°–µ–π—á–∞—Å –ª—É—á—à–µ –Ω–µ –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –∫–æ–º–Ω–∞—Ç—É, —á—Ç–æ–±—ã –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å –∏–≥—Ä–æ–∫–æ–≤.`,
          });
        }
        return fields;
      })(),
      footer: {
          iconURL: 'https://i.imgur.com/sDOEWMV.png',
          text: `–í –∏–≥—Ä–µ –Ω–∏–∫–∏ Uplay –æ—Ç–ª–∏—á–∞—é—Ç—Å—è? C–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ —Å–∫—Ä–∏–Ω–æ–º —Ç–∞–±–∞. –° –≤–∞–º–∏ –Ω–µ–Ω–∞–¥–µ–∂–Ω—ã–π –∏–≥—Ä–æ–∫! ‚Ä¢ S: ${IS[lobby.status]} ID: ${lobby.id}`,
      },
      thumbnail: {
          url: `${ENV.LOBBY_PREVIEW_URL}/${lobby.id}/preview?a${lobby.minRank}.${lobby.maxRank}.${lobby.dcChannel.userLimit - lobby.dcMembers.size}=1`,
      },
      timestamp: new Date(),
    },
  }),

  fastAppeal: async (LS: LobbyStore): Promise<MessageOptions> => ({
    embed: {
      author: {
        iconURL: LS.lfgChannel.guild.iconURL(),
        name: `–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –∫–æ–º–∞–Ω–¥—ã –≤ ${LS.category.name}`,
      },
      description: `–ö–∞–Ω–∞–ª –ø–æ–∏—Å–∫–∞: ${LS.lfgChannel}\n`
        + `–í—Å–µ–≥–æ –ª–æ–±–±–∏: \`${LS.rooms.filter(v => Boolean(v.dcMembers.size)).size}\`\n`
        + `–ò—â—É—Ç –∏–≥—Ä–æ–∫–∞: \`${LS.rooms
            .filter(l => Boolean(l.dcMembers.size) && l.appealMessage && l.joinAllowed)
            .size
          || (LS.rooms
            .filter(l => Boolean(l.dcMembers.size) && Boolean(l.appealMessage))
            .size
              ? '–≤—Å–µ –∫–æ–º–Ω–∞—Ç—ã —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω—ã!'
              : 0)}\`\n`
        + `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–æ–≤–æ–π –∫–æ–º–Ω–∞—Ç–µ: ${await (LS.rooms.filter(r => !r.dcMembers.size).last() || LS.rooms.last()).initInvite()} üëà`,
      fields: LS.rooms
        .filter(l => Boolean(l.dcMembers.size) && l.appealMessage && l.joinAllowed)
        .sort((a, b) => a.dcChannel.position - b.dcChannel.position)
        .array()
        .slice(0, 24)
        .map(lobby => ({
          inline: true,
          name: modeSelector(lobby)
            .replace(EMOJI_REGEXP, v => '\\' + v), // emoji wrap
          value: (lobby.hardplay
              ? `HardPlay\\${EmojiButtons.HARDPLAY}: —Ç–æ–ª—å–∫–æ \`${RANKS[lobby.guild.rankRoles.findIndex(r => lobby.guild.rankRoles[lobby.minRank] === r)]}\` –∏ –≤—ã—à–µ\n`
              : `–†–∞–Ω–≥: ${lobby.minRank === lobby.maxRank
                ? (lobby.maxRank === 0
                  ? '`–ª—é–±–æ–π`'
                  : (() => {
                   let n = lobby.minRank;
                   n--;
                   n = n - n % 4 + 1;
                   return `–æ—Ç \`${RANKS[n]}\` –¥–æ \`${RANKS[n + 3]}\``;
                  })())
                : `–æ—Ç \`${RANKS[lobby.minRank]}\` –¥–æ \`${RANKS[lobby.maxRank]}\``}\n`)
            + ([IS.NEWCOMER, IS.NEWCOMER_SEARCH].includes(lobby.status) ? '–ù–æ–≤–∏—á–æ–∫: –Ω–µ –≤—ã—à–µ `50` —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞\n' : '')
            + (lobby.description ? `–û–ø–∏—Å–∞–Ω–∏–µ: ${lobby.description}\n` : '')
            // + `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è: ${lobby.dcInvite.url} üëà\n`
            + `[–ø–æ–¥—Ä–æ–±–Ω–µ–µ...](${lobby.appealMessage.url})`,
        })),
      footer: {
        text: `ID - ${LS.settings.type}`,
      },
      timestamp: null,
    },
  }),

  appealMsgPremium: (member: GuildMember, description: string, invite: string): MessageOptions => ({
    embed: {
      author: {
        iconURL: member.user.displayAvatarURL(),
        name: `${member.user.tag} –∏—â–µ—Ç +${member.voice.channel.userLimit - member.voice.channel.members.size} –≤ —Å–≤–æ—é —É—é—Ç–Ω—É—é –∫–æ–º–Ω–∞—Ç—É | ${member.voice.channel.name}`,
      },
      color: 12458289,
      fields: [
        {
          name: 'üá∑6‚É£üá∑üá∫',
          value: description || ' ·ûµ·ûµ ·ûµ·ûµ',
        },
        {
          name: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è',
          value: `${invite} üëà`,
        },
      ],
      footer: {
        iconURL: 'https://cdn.discordapp.com/emojis/414787874374942721.png?v=1',
        text: `–•–æ—Ç–∏—Ç–µ —Ç–∞–∫ –∂–µ? –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –õ–° –°–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –∫ ${member.guild.owner.user.tag} —Å —Ä—É–±–ª—è–º–∏ –∏–∑ –º–∞–º–∏–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ <:oooohmyyy:585721245941891073>, –∏–ª–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ Nitro Boost.`,
      },
      thumbnail: {
        url: member.user.displayAvatarURL(),
      },
      timestamp: new Date(),
    },
  }),
};

const modeSelector = (lobby: LSRoom) => {
  const slot = lobby.joinAllowed
    ? ` | +${lobby.dcChannel.userLimit - lobby.dcMembers.size} —Å–ª–æ—Ç(-–∞)`
    : '';
  switch (lobby.status) {
    case IS.CASUAL_SEARCH:
    case IS.RANKED_SEARCH:
    case IS.CUSTOM_SEARCH:
      return `–ü–æ–∏—Å–∫ –º–∞—Ç—á–∞ –≤ ${lobby.dcChannel.name}` + slot;
    case IS.DISCOVERY_SEARCH:
      return `–ü–æ–∏—Å–∫ –†–∞–∑–≤–µ–¥–∫–∏ –≤ ${lobby.dcChannel.name}` + slot;
    case IS.NEWCOMER_SEARCH:
      return `–ü–æ–∏—Å–∫ —Ä–µ–∂–∏–º–∞ –ù–æ–≤–∏—á–æ–∫ –≤ ${lobby.dcChannel.name}` + slot;
    case IS.CASUAL:
    case IS.RANKED:
    case IS.CUSTOM:
      return `–ò–≥—Ä–∞—é—Ç –≤ ${lobby.dcChannel.name}`;
    case IS.NEWCOMER:
      return `–ò–≥—Ä–∞—é—Ç —Ä–µ–∂–∏–º –ù–æ–≤–∏—á–æ–∫ –≤ ${lobby.dcChannel.name}`;
    case IS.TERRORIST_HUNT:
      return `${lobby.dcChannel.name} —Ä–∞–∑–º–∏–Ω–∞–µ—Ç—Å—è –≤ –ê–Ω—Ç–∏—Ç–µ—Ä—Ä–æ—Ä–µ` + slot;
    case IS.DISCOVERY:
      return `${lobby.dcChannel.name} –∏–≥—Ä–∞–µ—Ç –†–∞–∑–≤–µ–¥–∫—É` + slot;
    case IS.OTHER:
    case IS.MENU:
    default:
      return lobby.close || lobby.dcMembers.size >= lobby.dcChannel.userLimit
        ? `–ì–æ—Ç–æ–≤—ã –∏–≥—Ä–∞—Ç—å –≤ ${lobby.dcChannel.name}`
        : `–ò—â—É—Ç +${lobby.dcChannel.userLimit - lobby.dcMembers.size} –≤ ${lobby.dcChannel.name}`;
  }
};
